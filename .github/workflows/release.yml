name: Build and release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    permissions:
      contents: write
      actions: write
      packages: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          # Add more targets as necessary

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Get version
        id: get-version
        run: echo "::set-output name=VERSION::$(grep '^version =' Cargo.toml | cut -d'"' -f2)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get-version.outputs.VERSION }}
          release_name: Release ${{ steps.get-version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/rust-clean-json
          asset_name: rust-clean-json-${{ matrix.target }}
          asset_content_type: application/octet-stream
